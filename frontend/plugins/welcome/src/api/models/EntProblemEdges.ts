/* tslint:disable */
/* eslint-disable */
/**
 * SUT SA Example API Playlist Vidoe
 * This is a sample server for SUT SE 2563
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntProblemStatus,
    EntProblemStatusFromJSON,
    EntProblemStatusFromJSONTyped,
    EntProblemStatusToJSON,
    EntProblemTitle,
    EntProblemTitleFromJSON,
    EntProblemTitleFromJSONTyped,
    EntProblemTitleToJSON,
    EntRoom,
    EntRoomFromJSON,
    EntRoomFromJSONTyped,
    EntRoomToJSON,
    EntUser,
    EntUserFromJSON,
    EntUserFromJSONTyped,
    EntUserToJSON,
} from './';

/**
 * 
 * @export
 * @interface EntProblemEdges
 */
export interface EntProblemEdges {
    /**
     * 
     * @type {EntProblemStatus}
     * @memberof EntProblemEdges
     */
    problemstatus?: EntProblemStatus;
    /**
     * 
     * @type {EntProblemTitle}
     * @memberof EntProblemEdges
     */
    problemtitle?: EntProblemTitle;
    /**
     * 
     * @type {EntRoom}
     * @memberof EntProblemEdges
     */
    room?: EntRoom;
    /**
     * 
     * @type {EntUser}
     * @memberof EntProblemEdges
     */
    user?: EntUser;
}

export function EntProblemEdgesFromJSON(json: any): EntProblemEdges {
    return EntProblemEdgesFromJSONTyped(json, false);
}

export function EntProblemEdgesFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntProblemEdges {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'problemstatus': !exists(json, 'problemstatus') ? undefined : EntProblemStatusFromJSON(json['problemstatus']),
        'problemtitle': !exists(json, 'problemtitle') ? undefined : EntProblemTitleFromJSON(json['problemtitle']),
        'room': !exists(json, 'room') ? undefined : EntRoomFromJSON(json['room']),
        'user': !exists(json, 'user') ? undefined : EntUserFromJSON(json['user']),
    };
}

export function EntProblemEdgesToJSON(value?: EntProblemEdges | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'problemstatus': EntProblemStatusToJSON(value.problemstatus),
        'problemtitle': EntProblemTitleToJSON(value.problemtitle),
        'room': EntRoomToJSON(value.room),
        'user': EntUserToJSON(value.user),
    };
}


