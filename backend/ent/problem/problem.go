// Code generated by entc, DO NOT EDIT.

package problem

const (
	// Label holds the string label denoting the problem type in the database.
	Label = "problem"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldProbleminfo holds the string denoting the probleminfo field in the database.
	FieldProbleminfo = "probleminfo"
	// FieldAdddate holds the string denoting the adddate field in the database.
	FieldAdddate = "adddate"

	// EdgeUser holds the string denoting the user edge name in mutations.
	EdgeUser = "user"
	// EdgeRoom holds the string denoting the room edge name in mutations.
	EdgeRoom = "room"
	// EdgeProblemtitle holds the string denoting the problemtitle edge name in mutations.
	EdgeProblemtitle = "problemtitle"
	// EdgeProblemstatus holds the string denoting the problemstatus edge name in mutations.
	EdgeProblemstatus = "problemstatus"

	// Table holds the table name of the problem in the database.
	Table = "problems"
	// UserTable is the table the holds the user relation/edge.
	UserTable = "problems"
	// UserInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	UserInverseTable = "users"
	// UserColumn is the table column denoting the user relation/edge.
	UserColumn = "user_id"
	// RoomTable is the table the holds the room relation/edge.
	RoomTable = "problems"
	// RoomInverseTable is the table name for the Room entity.
	// It exists in this package in order to avoid circular dependency with the "room" package.
	RoomInverseTable = "rooms"
	// RoomColumn is the table column denoting the room relation/edge.
	RoomColumn = "room_id"
	// ProblemtitleTable is the table the holds the problemtitle relation/edge.
	ProblemtitleTable = "problems"
	// ProblemtitleInverseTable is the table name for the ProblemTitle entity.
	// It exists in this package in order to avoid circular dependency with the "problemtitle" package.
	ProblemtitleInverseTable = "problem_titles"
	// ProblemtitleColumn is the table column denoting the problemtitle relation/edge.
	ProblemtitleColumn = "problemtitle"
	// ProblemstatusTable is the table the holds the problemstatus relation/edge.
	ProblemstatusTable = "problems"
	// ProblemstatusInverseTable is the table name for the ProblemStatus entity.
	// It exists in this package in order to avoid circular dependency with the "problemstatus" package.
	ProblemstatusInverseTable = "problem_status"
	// ProblemstatusColumn is the table column denoting the problemstatus relation/edge.
	ProblemstatusColumn = "problemstatus"
)

// Columns holds all SQL columns for problem fields.
var Columns = []string{
	FieldID,
	FieldProbleminfo,
	FieldAdddate,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Problem type.
var ForeignKeys = []string{
	"problemstatus",
	"problemtitle",
	"room_id",
	"user_id",
}

var (
	// ProbleminfoValidator is a validator for the "probleminfo" field. It is called by the builders before save.
	ProbleminfoValidator func(string) error
)
